(build_states_test) Debug : Entered build_states_test
(build_states_test) Debug : Survived getsize
(build_states_test) Debug : Malloced Titles
(dump_states_test) Debug : Dump of global states
(dump_states_test) Debug : TitleSize=2
(dump_states_test) Debug : 1 title01 1
(dump_states_test) Debug : 2 title02 2
Debug : Entered parse
Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
(add_state_to_player) Debug : PlayerSize = 1
(add_state_to_player) Debug : Player[0].id = 0
(addttl) Debug : State title01 added to player
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 1 : true : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Entered parse
Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
(add_state_to_player) Debug : PlayerSize = 2
(add_state_to_player) Debug : Player[0].id = 1
(add_state_to_player) Debug : Player[1].id = 0
(addttl) Debug : State title02 added to player
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 1 : true : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Entered parse
Debug : Entered if stmt 3
Debug : Survived Realloc if stmt 3
Debug : Survived freeform_new() if stmt 3
Debug : Leaving if stmt 3

Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
Debug : New Variable Allocated
Type not mentioned. Check documentation for syntax
(setvar) Error : Setvar failed with error code -2. Look at the documentation to troubleshoot
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 2 : false : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Entered parse
Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
(remove_state_from_player) Debug : PlayerSize = 2
(remove_state_from_player) Debug : Player[0].id = 1
(remove_state_from_player) Debug : Player[1].id = 2
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 1 : false : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Entered parse
Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 2
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
(find_ttl) Debug : State 2 not found
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Entered if stmt 1
Debug : Survived freeform_new()
Debug : Leaving if stmt 1

Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 2
Debug : Survived the args loop
Debug : Argsold in if stmt 2
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
(find_ttl) Debug : State 1 found at i=0
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
Debug : Command is 'all'
Debug : false is not true
Debug : Flag=1, In.name=false
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 4 : false : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Entered parse
Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 2
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Argsold at the start of if stmt 2
Debug : Entered if stmt 2
Debug : curlvl if stmt 2 : 1
Debug : Survived the args loop
Debug : Survived the selective_free
Debug : Entered Evaluate
Debug : Printing arguments
Debug : Command is 'all'
Debug : false is not true
Debug : Flag=1, In.name=false
Debug : Freed args
Debug : Leaving if stmt 2

Debug : Freed argsold
Debug : Survived the parse loop!
Debug : 2 : false : 0 : 0
(print_player_states) Debug : Printing current Player state array
(print_player_states) Debug : Exiting print_player_state
Debug : Printing current variable stack
